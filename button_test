#define BUTTON_PIN 5 // D1
#define PIXEL_PIN 4 // D2

// button stuff

// Variables will change:
int ledState = HIGH;         // the current state of the output pin
int buttonState;             // the current reading from the input pin
int lastButtonState = LOW;   // the previous reading from the input pin

// the following variables are unsigned longs because the time, measured in
// milliseconds, will quickly become a bigger number than can be stored in an int.
unsigned long lastDebounceTime = 0;  // the last time the output pin was toggled
unsigned long debounceDelay = 100;    // the debounce time; increase if the output flickers



void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  delay(1000);
  Serial.println(".");
  Serial.println(".");

  // button stuff
  pinMode(BUTTON_PIN, INPUT);
  pinMode(PIXEL_PIN, OUTPUT);
  
  
}

void loop() {
  // put your main code here, to run repeatedly:
  int reading = digitalRead(BUTTON_PIN);
  Serial.print("read: ");
  Serial.print(reading);
  // check to see if you just pressed the button
  // (i.e. the input went from LOW to HIGH), and you've waited long enough
  // since the last press to ignore any noise:

  // If the switch changed, due to noise or pressing:
  if (reading != lastButtonState) {
    Serial.print("VerÃ¤nderung");
    // reset the debouncing timer
    lastDebounceTime = millis();
  }
  Serial.print("calc: ");
  Serial.print((millis() - lastDebounceTime) );
  if ((millis() - lastDebounceTime) > debounceDelay) {


    // whatever the reading is at, it's been there for longer than the debounce
    // delay, so take it as the actual current state:

    // if the button state has changed:
    if (reading != buttonState) {
          
      buttonState = reading;
      Serial.print("buttonState: ");
      Serial.print(buttonState);
      // only toggle the LED if the new button state is HIGH
      if (buttonState == HIGH) {
        
   
        ledState = !ledState;
        Serial.print("Led: ");
        Serial.print(ledState);
        digitalWrite(PIXEL_PIN, ledState);
      }
    }
  }
  
  digitalWrite(PIXEL_PIN, ledState);
  
  // save the reading. Next time through the loop, it'll be the lastButtonState:
  lastButtonState = reading;
  Serial.print("lastButtonState: ");
  Serial.println(lastButtonState);

}


void updateLed() {
  Serial.println("updateled");
  digitalWrite(PIXEL_PIN, HIGH);

  
}
